#pragma version 6
intcblock 0 1 2 3 2000 10000 604800
bytecblock 0x7332 0x7473 0x7331 0x617361 0x7072 0x707461 0x7065 0x7066 0x7063 0x6264 0x7076696e 0x74 0x7562 0x616661 0x6c66 0x707672 0x706863 0x7573 0x746277 0x666964 0x707363 0x7076696c 0x7073 0x6376 0x736964 0x656674 0x7365747570 0x7462 0x6262 0x707763 0x70746c 0x766c6964 0x766964 0x736c70 0x626c70 0x7362 0x76617361 0x6d62 0x44454641554c5441444452455353 0x6166 0x6661 0x76626964 0x747262
txn ApplicationID
intc_0 // 0
==
bnz main_l117
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l116
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l115
txn OnCompletion
intc_1 // OptIn
==
bnz main_l114
txn OnCompletion
intc_2 // CloseOut
==
bnz main_l113
txna ApplicationArgs 0
pushbytes 0x7472616e73666572 // "transfer"
==
bnz main_l112
txna ApplicationArgs 0
pushbytes 0x627579 // "buy"
==
bnz main_l105
txna ApplicationArgs 0
pushbytes 0x73656c6c // "sell"
==
bnz main_l101
txna ApplicationArgs 0
pushbytes 0x6765745f6261636b696e67 // "get_backing"
==
bnz main_l100
txna ApplicationArgs 0
pushbytes 0x626f72726f77 // "borrow"
==
bnz main_l99
txna ApplicationArgs 0
pushbytes 0x7265706179 // "repay"
==
bnz main_l98
txna ApplicationArgs 0
pushbytes 0x636c61696d5f65787465726e616c // "claim_external"
==
bnz main_l97
txna ApplicationArgs 0
pushbytes 0x73657475705f6c6f636b // "setup_lock"
==
bnz main_l96
txna ApplicationArgs 0
pushbytes 0x6275795f70726573616c65 // "buy_presale"
==
bnz main_l95
txna ApplicationArgs 0
pushbytes 0x636c61696d5f70726573616c65 // "claim_presale"
==
bnz main_l84
txna ApplicationArgs 0
pushbytes 0x637265617465 // "create"
==
bnz main_l83
txna ApplicationArgs 0
bytec 26 // "setup"
==
bnz main_l65
txna ApplicationArgs 0
pushbytes 0x726573657475705f70726573616c65 // "resetup_presale"
==
bnz main_l41
txna ApplicationArgs 0
pushbytes 0x72656d6f76655f6d61785f627579 // "remove_max_buy"
==
bnz main_l40
txna ApplicationArgs 0
pushbytes 0x73657475705f7374616b696e67 // "setup_staking"
==
bnz main_l39
txna ApplicationArgs 0
pushbytes 0x73657475705f646973747269627574696f6e // "setup_distribution"
==
bnz main_l38
txna ApplicationArgs 0
pushbytes 0x6164645f6c6971 // "add_liq"
==
bnz main_l35
txna ApplicationArgs 0
pushbytes 0x7570646174655f625f666565 // "update_b_fee"
==
bnz main_l34
txna ApplicationArgs 0
pushbytes 0x7570646174655f735f666565 // "update_s_fee"
==
bnz main_l33
txna ApplicationArgs 0
pushbytes 0x7570646174655f62635f666565 // "update_bc_fee"
==
bnz main_l32
txna ApplicationArgs 0
pushbytes 0x7570646174655f626c705f666565 // "update_blp_fee"
==
bnz main_l31
txna ApplicationArgs 0
pushbytes 0x7570646174655f736c705f666565 // "update_slp_fee"
==
bnz main_l30
txna ApplicationArgs 0
pushbytes 0x6c6f636b5f66656573 // "lock_fees"
==
bnz main_l29
err
main_l29:
txn Sender
global CreatorAddress
==
assert
bytec 14 // "lf"
intc_1 // 1
app_global_put
intc_1 // 1
return
main_l30:
txn Sender
global CreatorAddress
==
assert
bytec 14 // "lf"
app_global_get
intc_0 // 0
==
assert
txna ApplicationArgs 1
btoi
intc 4 // 2000
<=
assert
bytec 33 // "slp"
txna ApplicationArgs 1
btoi
app_global_put
intc_1 // 1
return
main_l31:
txn Sender
global CreatorAddress
==
assert
bytec 14 // "lf"
app_global_get
intc_0 // 0
==
assert
txna ApplicationArgs 1
btoi
intc 4 // 2000
<=
assert
bytec 34 // "blp"
txna ApplicationArgs 1
btoi
app_global_put
intc_1 // 1
return
main_l32:
txn Sender
global CreatorAddress
==
assert
bytec 14 // "lf"
app_global_get
intc_0 // 0
==
assert
txna ApplicationArgs 1
btoi
intc 4 // 2000
<=
assert
bytec 27 // "tb"
txna ApplicationArgs 1
btoi
app_global_put
intc_1 // 1
return
main_l33:
txn Sender
global CreatorAddress
==
assert
bytec 14 // "lf"
app_global_get
intc_0 // 0
==
assert
txna ApplicationArgs 1
btoi
intc 4 // 2000
<=
assert
bytec 35 // "sb"
txna ApplicationArgs 1
btoi
app_global_put
intc_1 // 1
return
main_l34:
txn Sender
global CreatorAddress
==
assert
bytec 14 // "lf"
app_global_get
intc_0 // 0
==
assert
txna ApplicationArgs 1
btoi
intc 4 // 2000
<=
assert
bytec 28 // "bb"
txna ApplicationArgs 1
btoi
app_global_put
intc_1 // 1
return
main_l35:
txn Sender
global CreatorAddress
==
assert
global GroupSize
intc_2 // 2
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Receiver
global CurrentApplicationAddress
==
assert
txna ApplicationArgs 1
btoi
bytec_0 // "s2"
app_global_get
mulw
intc 5 // 10000
uncover 2
dig 1
*
cover 2
mulw
cover 2
+
swap
txn GroupIndex
intc_1 // 1
-
gtxns Amount
bytec_2 // "s1"
app_global_get
mulw
divmodw
pop
pop
swap
!
assert
store 21
load 21
pushint 9800 // 9800
>=
load 21
pushint 10200 // 10200
<=
&&
bnz main_l37
intc_0 // 0
return
main_l37:
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 1
btoi
callsub sendTokens_6
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
txn GroupIndex
intc_1 // 1
-
gtxns Amount
+
app_global_put
bytec_2 // "s1"
bytec_2 // "s1"
app_global_get
txna ApplicationArgs 1
btoi
+
app_global_put
intc_1 // 1
return
main_l38:
txn Sender
global CreatorAddress
==
assert
global GroupSize
intc_3 // 3
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
pushint 6 // appl
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 0
bytec 26 // "setup"
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Sender
global CreatorAddress
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
callsub getappaddress_1
txna Accounts 1
==
assert
txn Sender
txna Accounts 1
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 1
btoi
callsub sendTokens_6
intc_1 // 1
return
main_l39:
txn Sender
global CreatorAddress
==
assert
global GroupSize
intc_3 // 3
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns Receiver
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
callsub getappaddress_1
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
pushint 6 // appl
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 0
bytec 26 // "setup"
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa Assets 1
bytec 36 // "vasa"
app_global_get
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa Applications 1
global CurrentApplicationID
==
assert
bytec 24 // "sid"
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
app_global_put
txn Sender
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
callsub getappaddress_1
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 1
btoi
callsub sendTokens_6
intc_1 // 1
return
main_l40:
global CreatorAddress
txn Sender
==
assert
bytec 37 // "mb"
pushint 10000000000000000 // 10000000000000000
app_global_put
intc_1 // 1
return
main_l41:
txn NumAppArgs
pushint 10 // 10
>=
bnz main_l51
global GroupSize
intc_1 // 1
>=
bytec 7 // "pf"
app_global_get
intc_0 // 0
==
&&
global LatestTimestamp
bytec 6 // "pe"
app_global_get
>
&&
bytec 4 // "pr"
app_global_get
bytec 20 // "psc"
app_global_get
<
&&
txn Sender
global CreatorAddress
==
&&
txna Assets 0
bytec_3 // "asa"
app_global_get
==
&&
txn NumAppArgs
pushint 4 // 4
==
&&
txna ApplicationArgs 1
btoi
bytec 6 // "pe"
app_global_get
pushint 600 // 600
+
>=
&&
txna Accounts 1
load 8
==
&&
bnz main_l44
intc_0 // 0
return
main_l44:
bytec 11 // "t"
txna ApplicationArgs 1
btoi
app_global_put
bytec 25 // "eft"
txna ApplicationArgs 1
btoi
txna ApplicationArgs 3
btoi
+
app_global_put
txna ApplicationArgs 2
btoi
bytec_1 // "ts"
app_global_get
<
assert
txn Fee
intc_2 // 2
global MinTxnFee
*
>=
assert
txna ApplicationArgs 2
btoi
bytec_2 // "s1"
app_global_get
bytec 5 // "pta"
app_global_get
+
>
bnz main_l50
txna ApplicationArgs 2
btoi
bytec_2 // "s1"
app_global_get
bytec 5 // "pta"
app_global_get
+
<
bnz main_l49
main_l46:
bytec_2 // "s1"
txna ApplicationArgs 2
btoi
app_global_put
bytec 5 // "pta"
intc_0 // 0
app_global_put
global GroupSize
intc_2 // 2
==
bnz main_l48
main_l47:
bytec 7 // "pf"
intc_1 // 1
app_global_put
bytec 15 // "pvr"
intc_0 // 0
app_global_put
bytec 21 // "pvil"
intc_0 // 0
app_global_put
bytec 10 // "pvin"
intc_0 // 0
app_global_put
intc_1 // 1
return
main_l48:
gtxn 0 TypeEnum
intc_1 // pay
==
assert
gtxn 0 Receiver
global CurrentApplicationAddress
==
assert
gtxn 0 Amount
load 0
callsub calculateFraction_3
store 16
load 8
load 16
callsub sendAlgo_4
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
gtxn 0 Amount
+
load 16
-
app_global_put
b main_l47
main_l49:
global CurrentApplicationAddress
txn Sender
bytec_2 // "s1"
app_global_get
bytec 5 // "pta"
app_global_get
+
txna ApplicationArgs 2
btoi
-
callsub sendTokens_6
b main_l46
main_l50:
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 2
btoi
bytec_2 // "s1"
app_global_get
-
bytec 5 // "pta"
app_global_get
-
callsub sendTokens_6
b main_l46
main_l51:
global GroupSize
intc_1 // 1
>=
txna Assets 0
bytec_3 // "asa"
app_global_get
==
&&
txna Accounts 1
bytec 40 // "fa"
app_global_get
==
&&
bytec 7 // "pf"
app_global_get
intc_0 // 0
==
&&
global LatestTimestamp
bytec 6 // "pe"
app_global_get
>
&&
bytec 4 // "pr"
app_global_get
bytec 20 // "psc"
app_global_get
<
&&
txn Sender
global CreatorAddress
==
&&
txna ApplicationArgs 1
btoi
bytec 20 // "psc"
app_global_get
>=
&&
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
<=
&&
txna ApplicationArgs 2
btoi
bytec 16 // "phc"
app_global_get
<=
&&
txna ApplicationArgs 2
btoi
bytec 4 // "pr"
app_global_get
>=
&&
txna ApplicationArgs 3
btoi
global LatestTimestamp
>=
&&
txna ApplicationArgs 3
btoi
txna ApplicationArgs 4
btoi
<
&&
txna ApplicationArgs 4
btoi
txna ApplicationArgs 3
btoi
-
pushint 2419200 // 2419200
<=
&&
txna ApplicationArgs 5
btoi
bytec 29 // "pwc"
app_global_get
>=
&&
txna ApplicationArgs 6
btoi
bytec 30 // "ptl"
app_global_get
>=
&&
txna ApplicationArgs 6
btoi
intc 5 // 10000
<=
&&
txna ApplicationArgs 7
btoi
txna ApplicationArgs 4
btoi
>
&&
txna ApplicationArgs 7
btoi
txna ApplicationArgs 4
btoi
-
intc 6 // 604800
<=
&&
txna ApplicationArgs 8
btoi
bytec 5 // "pta"
app_global_get
>=
&&
txna ApplicationArgs 8
btoi
bytec_2 // "s1"
app_global_get
+
bytec_1 // "ts"
app_global_get
<=
&&
bnz main_l53
intc_0 // 0
return
main_l53:
bytec 22 // "ps"
txna ApplicationArgs 3
btoi
app_global_put
bytec 6 // "pe"
txna ApplicationArgs 4
btoi
app_global_put
bytec 16 // "phc"
txna ApplicationArgs 2
btoi
app_global_put
bytec 20 // "psc"
txna ApplicationArgs 1
btoi
app_global_put
bytec 29 // "pwc"
txna ApplicationArgs 5
btoi
app_global_put
bytec 30 // "ptl"
txna ApplicationArgs 6
btoi
app_global_put
bytec 11 // "t"
txna ApplicationArgs 7
btoi
app_global_put
bytec 25 // "eft"
txna ApplicationArgs 7
btoi
txna ApplicationArgs 9
btoi
+
app_global_put
bytec 7 // "pf"
intc_0 // 0
app_global_put
bytec 15 // "pvr"
app_global_get
intc_0 // 0
!=
bnz main_l64
main_l54:
txn NumAppArgs
pushint 13 // 13
==
bnz main_l63
main_l55:
global GroupSize
intc_2 // 2
==
bnz main_l62
main_l56:
txna ApplicationArgs 8
btoi
bytec 5 // "pta"
app_global_get
>
bnz main_l58
main_l57:
intc_1 // 1
return
main_l58:
global GroupSize
intc_2 // 2
==
bnz main_l61
txn Fee
intc_2 // 2
global MinTxnFee
*
>=
assert
main_l60:
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 8
btoi
bytec 5 // "pta"
app_global_get
-
callsub sendTokens_6
bytec 5 // "pta"
txna ApplicationArgs 8
btoi
app_global_put
b main_l57
main_l61:
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
b main_l60
main_l62:
txn Fee
intc_2 // 2
global MinTxnFee
*
>=
assert
gtxn 0 TypeEnum
intc_1 // pay
==
assert
gtxn 0 Receiver
global CurrentApplicationAddress
==
assert
gtxn 0 Amount
load 0
callsub calculateFraction_3
store 16
load 8
load 16
callsub sendAlgo_4
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
gtxn 0 Amount
+
load 16
-
app_global_put
b main_l56
main_l63:
txna ApplicationArgs 10
btoi
txna ApplicationArgs 4
btoi
>=
assert
txna ApplicationArgs 12
btoi
intc_1 // 1
>=
assert
bytec 15 // "pvr"
txna ApplicationArgs 10
btoi
app_global_put
bytec 21 // "pvil"
txna ApplicationArgs 11
btoi
app_global_put
bytec 10 // "pvin"
txna ApplicationArgs 12
btoi
app_global_put
b main_l55
main_l64:
txn NumAppArgs
pushint 13 // 13
==
assert
b main_l54
main_l65:
callsub checkExternalStates_0
txna Accounts 2
txna Assets 0
asset_holding_get AssetBalance
store 20
store 19
load 20
assert
global CreatorAddress
txn Sender
==
assert
global GroupSize
intc_3 // 3
>=
assert
txn NumAppArgs
pushint 4 // 4
>=
assert
txn GroupIndex
intc_1 // 1
-
gtxns Sender
txn Sender
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns Sender
txn Sender
==
assert
bytec_2 // "s1"
app_global_get
intc_0 // 0
==
assert
bytec_0 // "s2"
app_global_get
intc_0 // 0
==
assert
txna ApplicationArgs 1
btoi
bytec_1 // "ts"
app_global_get
<=
assert
txna ApplicationArgs 2
btoi
global LatestTimestamp
>
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txna Accounts 1
load 8
==
assert
txna Accounts 2
load 4
==
assert
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
intc_0 // 0
store 18
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Receiver
global CurrentApplicationAddress
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns TypeEnum
pushint 4 // axfer
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns Sender
txn GroupIndex
intc_2 // 2
-
gtxns AssetReceiver
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns AssetAmount
intc_0 // 0
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns XferAsset
bytec_3 // "asa"
app_global_get
==
assert
bytec 25 // "eft"
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
+
app_global_put
bytec_2 // "s1"
txna ApplicationArgs 1
btoi
app_global_put
bytec 11 // "t"
txna ApplicationArgs 2
btoi
app_global_put
global GroupSize
pushint 5 // 5
==
bnz main_l77
main_l66:
load 18
intc_0 // 0
==
bnz main_l76
main_l67:
txn NumAppArgs
pushint 4 // 4
>
bnz main_l71
txna ApplicationArgs 1
btoi
bytec_1 // "ts"
app_global_get
<
bnz main_l70
main_l69:
intc_1 // 1
return
main_l70:
global CurrentApplicationAddress
txn Sender
bytec_1 // "ts"
app_global_get
txna ApplicationArgs 1
btoi
-
callsub sendTokens_6
b main_l69
main_l71:
txn NumAppArgs
pushint 8 // 8
>=
assert
txna ApplicationArgs 2
btoi
bytec 6 // "pe"
app_global_get
>
assert
txna ApplicationArgs 2
btoi
bytec 6 // "pe"
app_global_get
-
intc 6 // 604800
<=
assert
txna ApplicationArgs 5
btoi
txna ApplicationArgs 4
btoi
>=
assert
txna ApplicationArgs 7
btoi
intc 5 // 10000
<=
assert
txna ApplicationArgs 8
btoi
txna ApplicationArgs 1
btoi
+
bytec_1 // "ts"
app_global_get
<=
assert
bytec 20 // "psc"
txna ApplicationArgs 4
btoi
app_global_put
bytec 16 // "phc"
txna ApplicationArgs 5
btoi
app_global_put
bytec 29 // "pwc"
txna ApplicationArgs 6
btoi
app_global_put
bytec 30 // "ptl"
txna ApplicationArgs 7
btoi
app_global_put
bytec 4 // "pr"
intc_0 // 0
app_global_put
bytec 5 // "pta"
txna ApplicationArgs 8
btoi
app_global_put
txn NumAppArgs
pushint 12 // 12
==
bnz main_l75
bytec 15 // "pvr"
intc_0 // 0
app_global_put
bytec 21 // "pvil"
intc_0 // 0
app_global_put
bytec 10 // "pvin"
intc_0 // 0
app_global_put
main_l73:
bytec_1 // "ts"
app_global_get
bytec 5 // "pta"
app_global_get
-
bytec_2 // "s1"
app_global_get
-
intc_0 // 0
>
bz main_l69
global CurrentApplicationAddress
txn Sender
bytec_1 // "ts"
app_global_get
bytec 5 // "pta"
app_global_get
-
bytec_2 // "s1"
app_global_get
-
callsub sendTokens_6
b main_l69
main_l75:
txna ApplicationArgs 9
btoi
bytec 6 // "pe"
app_global_get
>=
assert
txna ApplicationArgs 11
btoi
intc_1 // 1
>=
assert
bytec 15 // "pvr"
txna ApplicationArgs 9
btoi
app_global_put
bytec 21 // "pvil"
txna ApplicationArgs 10
btoi
app_global_put
bytec 10 // "pvin"
txna ApplicationArgs 11
btoi
app_global_put
b main_l73
main_l76:
txn GroupIndex
intc_1 // 1
-
gtxns Amount
load 0
callsub calculateFraction_3
store 16
bytec_0 // "s2"
txn GroupIndex
intc_1 // 1
-
gtxns Amount
load 16
-
app_global_put
load 8
load 16
callsub sendAlgo_4
b main_l67
main_l77:
txn GroupIndex
pushint 4 // 4
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
pushint 4 // 4
-
gtxns Receiver
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
callsub getappaddress_1
==
assert
txn GroupIndex
intc_3 // 3
-
gtxns TypeEnum
pushint 6 // appl
==
assert
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 0
bytec 26 // "setup"
==
assert
txna Accounts 3
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
callsub getappaddress_1
==
assert
bytec 24 // "sid"
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
app_global_put
txn NumAppArgs
pushint 4 // 4
>
bnz main_l82
txna ApplicationArgs 1
btoi
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 1
btoi
+
bytec_1 // "ts"
app_global_get
<=
assert
main_l79:
bytec_1 // "ts"
app_global_get
pushint 300 // 300
callsub calculateFraction_3
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 1
btoi
<=
bnz main_l81
main_l80:
global CurrentApplicationAddress
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
callsub getappaddress_1
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 1
btoi
callsub sendTokens_6
bytec 24 // "sid"
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
app_global_put
b main_l66
main_l81:
intc_1 // 1
store 18
bytec_0 // "s2"
txn GroupIndex
intc_1 // 1
-
gtxns Amount
app_global_put
b main_l80
main_l82:
txna ApplicationArgs 10
btoi
txna ApplicationArgs 1
btoi
+
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 1
btoi
+
bytec_1 // "ts"
app_global_get
<=
assert
b main_l79
main_l83:
global GroupSize
intc_2 // 2
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Sender
txn Sender
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Receiver
global CurrentApplicationAddress
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Amount
pushint 201000 // 201000
>=
assert
bytec_3 // "asa"
app_global_get
intc_0 // 0
==
assert
txn Sender
global CreatorAddress
==
assert
itxn_begin
intc_3 // acfg
itxn_field TypeEnum
txna ApplicationArgs 2
itxn_field ConfigAssetUnitName
txna ApplicationArgs 1
itxn_field ConfigAssetName
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
bytec_1 // "ts"
app_global_get
itxn_field ConfigAssetTotal
txna ApplicationArgs 3
btoi
itxn_field ConfigAssetDecimals
txna ApplicationArgs 4
itxn_field ConfigAssetURL
intc_1 // 1
itxn_field ConfigAssetDefaultFrozen
itxn_submit
bytec_3 // "asa"
itxn CreatedAssetID
app_global_put
intc_1 // 1
return
main_l84:
callsub checkExternalStates_0
global GroupSize
intc_1 // 1
==
assert
intc_0 // 0
global CurrentApplicationID
app_opted_in
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn Fee
pushint 4 // 4
global MinTxnFee
*
>=
assert
bytec 6 // "pe"
app_global_get
global LatestTimestamp
<
assert
bytec 4 // "pr"
app_global_get
bytec 20 // "psc"
app_global_get
>=
bnz main_l87
txn Sender
intc_0 // 0
bytec 8 // "pc"
app_local_get
callsub sendAlgo_4
bytec 4 // "pr"
bytec 4 // "pr"
app_global_get
intc_0 // 0
bytec 8 // "pc"
app_local_get
-
app_global_put
intc_0 // 0
bytec 8 // "pc"
intc_0 // 0
app_local_put
main_l86:
intc_1 // 1
return
main_l87:
bytec 7 // "pf"
app_global_get
intc_1 // 1
!=
bnz main_l92
main_l88:
intc_0 // 0
bytec 8 // "pc"
app_local_get
bytec 5 // "pta"
app_global_get
mulw
intc_0 // 0
bytec 16 // "phc"
app_global_get
divmodw
pop
pop
swap
!
assert
store 12
bytec 10 // "pvin"
app_global_get
intc_0 // 0
==
bnz main_l91
intc_0 // 0
bytec 23 // "cv"
app_local_get
bytec 10 // "pvin"
app_global_get
<
assert
bytec 15 // "pvr"
app_global_get
intc_0 // 0
bytec 23 // "cv"
app_local_get
bytec 21 // "pvil"
app_global_get
*
+
store 21
load 21
global LatestTimestamp
<=
assert
intc_0 // 0
bytec 23 // "cv"
intc_0 // 0
bytec 23 // "cv"
app_local_get
intc_1 // 1
+
app_local_put
global CurrentApplicationAddress
txn Sender
load 12
bytec 10 // "pvin"
app_global_get
/
callsub sendTokens_6
intc_0 // 0
bytec 23 // "cv"
app_local_get
bytec 10 // "pvin"
app_global_get
==
bz main_l86
intc_0 // 0
bytec 8 // "pc"
intc_0 // 0
app_local_put
b main_l86
main_l91:
global CurrentApplicationAddress
txn Sender
load 12
callsub sendTokens_6
intc_0 // 0
bytec 8 // "pc"
intc_0 // 0
app_local_put
b main_l86
main_l92:
bytec 4 // "pr"
app_global_get
load 0
callsub calculateFraction_3
store 16
bytec 4 // "pr"
app_global_get
bytec 30 // "ptl"
app_global_get
callsub calculateFraction_3
store 12
bytec 4 // "pr"
app_global_get
load 12
-
load 16
-
store 13
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
load 12
+
app_global_put
global CreatorAddress
load 13
callsub sendAlgo_4
load 8
load 16
callsub sendAlgo_4
bytec 16 // "phc"
app_global_get
bytec 4 // "pr"
app_global_get
>
bnz main_l94
main_l93:
bytec 7 // "pf"
intc_1 // 1
app_global_put
b main_l88
main_l94:
bytec 5 // "pta"
app_global_get
bytec 5 // "pta"
app_global_get
bytec 4 // "pr"
app_global_get
mulw
intc_0 // 0
bytec 16 // "phc"
app_global_get
divmodw
pop
pop
swap
!
assert
-
store 10
global CurrentApplicationAddress
load 4
load 10
callsub sendTokens_6
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
load 10
-
app_global_put
bytec 9 // "bd"
bytec 9 // "bd"
app_global_get
load 10
+
app_global_put
b main_l93
main_l95:
global GroupSize
intc_2 // 2
==
assert
intc_0 // 0
global CurrentApplicationID
app_opted_in
assert
bytec 22 // "ps"
app_global_get
global LatestTimestamp
<=
assert
bytec 6 // "pe"
app_global_get
global LatestTimestamp
>=
assert
gtxn 1 TypeEnum
intc_1 // pay
==
assert
gtxn 1 Receiver
global CurrentApplicationAddress
==
assert
gtxn 1 Amount
intc_0 // 0
bytec 8 // "pc"
app_local_get
+
bytec 29 // "pwc"
app_global_get
<=
assert
gtxn 1 Amount
bytec 4 // "pr"
app_global_get
+
bytec 16 // "phc"
app_global_get
<=
assert
intc_0 // 0
bytec 8 // "pc"
gtxn 1 Amount
intc_0 // 0
bytec 8 // "pc"
app_local_get
+
app_local_put
bytec 4 // "pr"
bytec 4 // "pr"
app_global_get
gtxn 1 Amount
+
app_global_put
intc_1 // 1
return
main_l96:
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
pushint 6 // appl
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
bytec 31 // "vlid"
app_global_get
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 0
pushbytes 0x736d6172745f7365747570 // "smart_setup"
==
assert
txn Sender
bytec 31 // "vlid"
app_global_get
callsub getappaddress_1
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 1
btoi
callsub sendTokens_6
intc_1 // 1
return
main_l97:
txn Sender
bytec 24 // "sid"
app_global_get
callsub getappaddress_1
==
txn Sender
bytec 31 // "vlid"
app_global_get
callsub getappaddress_1
==
||
assert
txn Sender
txna Accounts 1
txna ApplicationArgs 1
btoi
callsub sendTokens_6
intc_1 // 1
return
main_l98:
txn Sender
global CurrentApplicationID
app_opted_in
assert
global GroupSize
intc_2 // 2
==
assert
gtxn 1 TypeEnum
intc_1 // pay
==
assert
gtxn 1 Sender
txn Sender
==
assert
gtxn 1 Amount
intc_0 // 0
bytec 12 // "ub"
app_local_get
<=
assert
gtxn 1 Receiver
global CurrentApplicationAddress
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn Fee
intc_2 // 2
global MinTxnFee
*
>=
assert
gtxn 1 Amount
intc_0 // 0
bytec 17 // "us"
app_local_get
mulw
intc_0 // 0
intc_0 // 0
bytec 12 // "ub"
app_local_get
divmodw
pop
pop
swap
!
assert
store 12
global CurrentApplicationAddress
txn Sender
load 12
callsub sendTokens_6
intc_0 // 0
bytec 17 // "us"
intc_0 // 0
bytec 17 // "us"
app_local_get
load 12
-
app_local_put
intc_0 // 0
bytec 12 // "ub"
intc_0 // 0
bytec 12 // "ub"
app_local_get
gtxn 1 Amount
-
app_local_put
bytec 18 // "tbw"
bytec 18 // "tbw"
app_global_get
gtxn 1 Amount
-
app_global_put
intc_1 // 1
return
main_l99:
txn Sender
global CurrentApplicationID
app_opted_in
assert
global GroupSize
intc_1 // 1
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
txn NumAppArgs
intc_2 // 2
==
assert
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 1
btoi
callsub sendTokens_6
txna ApplicationArgs 1
btoi
global CurrentApplicationAddress
balance
global CurrentApplicationAddress
min_balance
-
bytec_0 // "s2"
app_global_get
-
bytec 18 // "tbw"
app_global_get
+
mulw
intc_0 // 0
bytec_1 // "ts"
app_global_get
divmodw
pop
pop
swap
!
assert
store 12
txn Sender
load 12
callsub sendAlgo_4
intc_0 // 0
bytec 17 // "us"
intc_0 // 0
bytec 17 // "us"
app_local_get
txna ApplicationArgs 1
btoi
+
app_local_put
intc_0 // 0
bytec 12 // "ub"
intc_0 // 0
bytec 12 // "ub"
app_local_get
load 12
+
app_local_put
bytec 18 // "tbw"
bytec 18 // "tbw"
app_global_get
load 12
+
app_global_put
intc_1 // 1
return
main_l100:
callsub checkExternalStates_0
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
txna Accounts 1
load 4
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
global CurrentApplicationAddress
balance
global CurrentApplicationAddress
min_balance
-
bytec_0 // "s2"
app_global_get
-
bytec 18 // "tbw"
app_global_get
+
mulw
intc_0 // 0
bytec_1 // "ts"
app_global_get
divmodw
pop
pop
swap
!
assert
store 12
load 12
intc_0 // 0
>
assert
txn Sender
load 12
callsub sendAlgo_4
txn Sender
load 4
txna ApplicationArgs 1
btoi
callsub sendTokens_6
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
txna ApplicationArgs 1
btoi
-
app_global_put
bytec 9 // "bd"
bytec 9 // "bd"
app_global_get
txna ApplicationArgs 1
btoi
+
app_global_put
intc_1 // 1
return
main_l101:
callsub checkExternalStates_0
bytec 11 // "t"
app_global_get
global LatestTimestamp
<=
assert
global GroupSize
intc_1 // 1
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txna Accounts 1
load 4
==
assert
txna Accounts 2
load 8
==
assert
txna Accounts 3
bytec 41 // "vbid"
app_global_get
callsub getappaddress_1
==
assert
txn Fee
pushint 6 // 6
global MinTxnFee
*
>=
assert
txn NumAppArgs
pushint 4 // 4
==
assert
bytec 11 // "t"
app_global_get
global LatestTimestamp
<=
bytec 7 // "pf"
app_global_get
&&
assert
txna ApplicationArgs 1
btoi
bytec 35 // "sb"
app_global_get
callsub calculateFraction_3
store 10
txna ApplicationArgs 1
btoi
load 10
-
bytec_0 // "s2"
app_global_get
mulw
intc_0 // 0
bytec_2 // "s1"
app_global_get
divmodw
pop
pop
swap
!
assert
store 12
txna ApplicationArgs 1
btoi
bytec_0 // "s2"
app_global_get
mulw
intc_0 // 0
bytec_2 // "s1"
app_global_get
divmodw
pop
pop
swap
!
assert
store 21
load 21
bytec 33 // "slp"
app_global_get
callsub calculateFraction_3
store 11
load 21
bytec 27 // "tb"
app_global_get
callsub calculateFraction_3
store 14
load 21
load 2
callsub calculateFraction_3
store 16
load 21
load 6
callsub calculateFraction_3
store 15
bytec 13 // "afa"
app_global_get
bytec 38 // "DEFAULTADDRESS"
!=
bnz main_l104
intc_0 // 0
store 17
main_l103:
load 12
load 14
-
load 11
-
load 16
-
load 15
-
load 17
-
store 13
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
load 13
callsub isValidSlippage_2
assert
txn Sender
load 13
callsub sendAlgo_4
txna Accounts 3
load 15
callsub sendAlgo_4
load 8
load 16
callsub sendAlgo_4
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 1
btoi
callsub sendTokens_6
global CurrentApplicationAddress
load 4
load 10
callsub sendTokens_6
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
load 10
-
app_global_put
bytec 9 // "bd"
bytec 9 // "bd"
app_global_get
load 10
+
app_global_put
bytec_2 // "s1"
bytec_2 // "s1"
app_global_get
txna ApplicationArgs 1
btoi
load 10
-
+
app_global_put
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
load 12
-
load 11
+
app_global_put
intc_1 // 1
return
main_l104:
txna Accounts 4
bytec 13 // "afa"
app_global_get
==
assert
load 21
bytec 39 // "af"
app_global_get
callsub calculateFraction_3
store 17
bytec 13 // "afa"
app_global_get
load 17
callsub sendAlgo_4
b main_l103
main_l105:
callsub checkExternalStates_0
bytec 11 // "t"
app_global_get
global LatestTimestamp
<=
bytec 7 // "pf"
app_global_get
&&
assert
global GroupSize
intc_2 // 2
==
assert
txna Accounts 1
load 4
==
assert
txna Accounts 2
load 8
==
assert
txna Accounts 3
bytec 32 // "vid"
app_global_get
callsub getappaddress_1
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txna Applications 1
bytec 32 // "vid"
app_global_get
==
assert
gtxn 0 TypeEnum
intc_1 // pay
==
assert
gtxn 0 Receiver
global CurrentApplicationAddress
==
assert
gtxn 0 Sender
txn Sender
==
assert
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
>
assert
txn NumAppArgs
intc_3 // 3
==
assert
txn Fee
pushint 5 // 5
global MinTxnFee
*
>=
assert
gtxn 0 Amount
bytec 37 // "mb"
app_global_get
<=
assert
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 2
callsub calculateFraction_3
store 16
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 6
callsub calculateFraction_3
store 15
load 15
bytec 32 // "vid"
app_global_get
callsub burnVerse_5
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec 27 // "tb"
app_global_get
callsub calculateFraction_3
store 14
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec 34 // "blp"
app_global_get
callsub calculateFraction_3
store 11
bytec 13 // "afa"
app_global_get
bytec 38 // "DEFAULTADDRESS"
!=
bnz main_l111
intc_0 // 0
store 17
main_l107:
global LatestTimestamp
bytec 25 // "eft"
app_global_get
>=
bnz main_l110
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 14
-
load 15
-
load 16
-
load 17
-
load 11
-
global LatestTimestamp
bytec 11 // "t"
app_global_get
-
mulw
intc_0 // 0
bytec 25 // "eft"
app_global_get
bytec 11 // "t"
app_global_get
-
divmodw
pop
pop
swap
!
assert
store 21
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 21
-
load 16
-
load 15
-
store 14
load 21
bytec_2 // "s1"
app_global_get
mulw
intc_0 // 0
bytec_0 // "s2"
app_global_get
divmodw
pop
pop
swap
!
assert
store 12
load 21
bytec_2 // "s1"
app_global_get
mulw
intc_0 // 0
bytec_0 // "s2"
app_global_get
divmodw
pop
pop
swap
!
assert
bytec 28 // "bb"
app_global_get
callsub calculateFraction_3
store 10
main_l109:
load 12
intc_0 // 0
>
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
load 12
load 10
-
callsub isValidSlippage_2
assert
global CurrentApplicationAddress
txn Sender
load 12
load 10
-
callsub sendTokens_6
global CurrentApplicationAddress
load 4
load 10
callsub sendTokens_6
load 8
load 16
callsub sendAlgo_4
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
load 10
-
app_global_put
bytec 9 // "bd"
bytec 9 // "bd"
app_global_get
load 10
+
app_global_put
bytec_2 // "s1"
bytec_2 // "s1"
app_global_get
load 12
-
app_global_put
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 14
-
load 15
-
load 16
-
load 17
-
load 11
-
+
load 11
+
app_global_put
intc_1 // 1
return
main_l110:
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 14
-
load 15
-
load 16
-
load 17
-
load 11
-
bytec_2 // "s1"
app_global_get
mulw
intc_0 // 0
bytec_0 // "s2"
app_global_get
divmodw
pop
pop
swap
!
assert
store 12
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec_2 // "s1"
app_global_get
mulw
intc_0 // 0
bytec_0 // "s2"
app_global_get
divmodw
pop
pop
swap
!
assert
bytec 28 // "bb"
app_global_get
callsub calculateFraction_3
store 10
b main_l109
main_l111:
txna Accounts 4
bytec 13 // "afa"
app_global_get
==
assert
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec 39 // "af"
app_global_get
callsub calculateFraction_3
store 17
bytec 13 // "afa"
app_global_get
load 17
callsub sendAlgo_4
b main_l107
main_l112:
callsub checkExternalStates_0
txn NumAppArgs
intc_2 // 2
==
assert
txna Accounts 1
load 4
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
txna ApplicationArgs 1
btoi
bytec 42 // "trb"
app_global_get
callsub calculateFraction_3
store 10
txn Sender
load 4
load 10
callsub sendTokens_6
txn Sender
txna Accounts 2
txna ApplicationArgs 1
btoi
load 10
-
callsub sendTokens_6
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
load 10
-
app_global_put
bytec 9 // "bd"
bytec 9 // "bd"
app_global_get
load 10
+
app_global_put
intc_1 // 1
return
main_l113:
global GroupSize
intc_1 // 1
==
assert
intc_0 // 0
bytec 8 // "pc"
app_local_get
intc_0 // 0
==
assert
intc_0 // 0
bytec 12 // "ub"
app_local_get
intc_0 // 0
==
assert
intc_0 // 0
bytec 17 // "us"
app_local_get
intc_0 // 0
==
assert
intc_1 // 1
return
main_l114:
bytec 22 // "ps"
app_global_get
global LatestTimestamp
<=
assert
intc_0 // 0
bytec 8 // "pc"
intc_0 // 0
app_local_put
intc_0 // 0
bytec 12 // "ub"
intc_0 // 0
app_local_put
intc_0 // 0
bytec 17 // "us"
intc_0 // 0
app_local_put
intc_0 // 0
bytec 23 // "cv"
intc_0 // 0
app_local_put
intc_1 // 1
return
main_l115:
intc_0 // 0
return
main_l116:
intc_0 // 0
return
main_l117:
txn NumAppArgs
pushint 8 // 8
==
txn NumAppArgs
pushint 9 // 9
==
||
txn NumAppArgs
pushint 10 // 10
==
||
txn NumAppArgs
pushint 11 // 11
==
||
assert
bytec_1 // "ts"
txna ApplicationArgs 0
btoi
app_global_put
bytec 28 // "bb"
txna ApplicationArgs 1
btoi
app_global_put
bytec 35 // "sb"
txna ApplicationArgs 2
btoi
app_global_put
bytec 42 // "trb"
txna ApplicationArgs 3
btoi
app_global_put
bytec 34 // "blp"
txna ApplicationArgs 4
btoi
app_global_put
bytec 33 // "slp"
txna ApplicationArgs 5
btoi
app_global_put
bytec 27 // "tb"
txna ApplicationArgs 6
btoi
app_global_put
bytec 37 // "mb"
txna ApplicationArgs 7
btoi
app_global_put
bytec 32 // "vid"
txna Applications 1
app_global_put
bytec 41 // "vbid"
txna Applications 2
app_global_put
bytec 31 // "vlid"
txna Applications 3
app_global_put
bytec 19 // "fid"
txna Applications 4
app_global_put
bytec 36 // "vasa"
txna Assets 0
app_global_put
bytec_3 // "asa"
intc_0 // 0
app_global_put
bytec 24 // "sid"
intc_0 // 0
app_global_put
bytec 10 // "pvin"
intc_0 // 0
app_global_put
bytec 15 // "pvr"
intc_0 // 0
app_global_put
bytec 21 // "pvil"
intc_0 // 0
app_global_put
bytec 14 // "lf"
intc_0 // 0
app_global_put
bytec 22 // "ps"
intc_0 // 0
app_global_put
bytec 6 // "pe"
intc_0 // 0
app_global_put
bytec 7 // "pf"
intc_1 // 1
app_global_put
txn NumAccounts
intc_3 // 3
==
bnz main_l121
bytec 13 // "afa"
bytec 38 // "DEFAULTADDRESS"
app_global_put
txn NumAppArgs
pushint 8 // 8
>
bnz main_l120
main_l119:
bytec_0 // "s2"
intc_0 // 0
app_global_put
bytec_2 // "s1"
intc_0 // 0
app_global_put
bytec 9 // "bd"
intc_0 // 0
app_global_put
bytec 18 // "tbw"
intc_0 // 0
app_global_put
intc_1 // 1
return
main_l120:
txna ApplicationArgs 9
btoi
txna ApplicationArgs 8
btoi
>
assert
txna ApplicationArgs 8
btoi
global LatestTimestamp
>
assert
bytec 22 // "ps"
txna ApplicationArgs 8
btoi
app_global_put
bytec 6 // "pe"
txna ApplicationArgs 9
btoi
app_global_put
bytec 7 // "pf"
intc_0 // 0
app_global_put
b main_l119
main_l121:
bytec 13 // "afa"
txna Accounts 3
app_global_put
bytec 39 // "af"
txna ApplicationArgs 8
btoi
app_global_put
txn NumAppArgs
pushint 9 // 9
>
bz main_l119
txna ApplicationArgs 10
btoi
txna ApplicationArgs 9
btoi
>
assert
txna ApplicationArgs 9
btoi
global LatestTimestamp
>
assert
bytec 22 // "ps"
txna ApplicationArgs 9
btoi
app_global_put
bytec 6 // "pe"
txna ApplicationArgs 10
btoi
app_global_put
bytec 7 // "pf"
intc_0 // 0
app_global_put
b main_l119

// checkExternalStates
checkExternalStates_0:
bytec 19 // "fid"
app_global_get
bytec 40 // "fa"
app_global_get_ex
store 9
store 8
bytec 19 // "fid"
app_global_get
pushbytes 0x64767462 // "dvtb"
app_global_get_ex
store 7
store 6
bytec 19 // "fid"
app_global_get
pushbytes 0x66706c // "fpl"
app_global_get_ex
store 3
store 2
bytec 19 // "fid"
app_global_get
pushbytes 0x6261 // "ba"
app_global_get_ex
store 5
store 4
bytec 19 // "fid"
app_global_get
pushbytes 0x70727366 // "prsf"
app_global_get_ex
store 1
store 0
load 1
assert
load 9
assert
load 3
assert
load 7
assert
load 5
assert
retsub

// get_app_address
getappaddress_1:
store 22
pushbytes 0x6170704944 // "appID"
load 22
itob
concat
sha512_256
retsub

// isValidSlippage
isValidSlippage_2:
store 25
store 24
store 23
load 23
load 24
load 25
>
bnz isValidSlippage_2_l2
intc_0 // 0
b isValidSlippage_2_l3
isValidSlippage_2_l2:
load 24
load 25
-
isValidSlippage_2_l3:
intc 5 // 10000
mulw
intc_0 // 0
load 24
divmodw
pop
pop
swap
!
assert
>
retsub

// calculateFraction
calculateFraction_3:
store 27
store 26
load 26
load 27
mulw
intc_0 // 0
intc 5 // 10000
divmodw
pop
pop
swap
!
assert
retsub

// sendAlgo
sendAlgo_4:
store 29
store 28
itxn_begin
intc_1 // pay
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field Sender
load 28
itxn_field Receiver
load 29
itxn_field Amount
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// burnVerse
burnVerse_5:
store 31
store 30
itxn_begin
intc_1 // pay
itxn_field TypeEnum
load 31
callsub getappaddress_1
itxn_field Receiver
load 30
itxn_field Amount
intc_0 // 0
itxn_field Fee
itxn_next
pushint 6 // appl
itxn_field TypeEnum
load 31
itxn_field ApplicationID
pushbytes 0x6275726e // "burn"
itxn_field ApplicationArgs
bytec 36 // "vasa"
app_global_get
itxn_field Assets
load 4
itxn_field Accounts
bytec 19 // "fid"
app_global_get
itxn_field Applications
intc_2 // 2
global MinTxnFee
*
itxn_field Fee
itxn_submit
retsub

// sendTokens
sendTokens_6:
store 34
store 33
store 32
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field Sender
bytec_3 // "asa"
app_global_get
itxn_field XferAsset
load 34
itxn_field AssetAmount
load 32
itxn_field AssetSender
load 33
itxn_field AssetReceiver
intc_0 // 0
itxn_field Fee
itxn_submit
retsub