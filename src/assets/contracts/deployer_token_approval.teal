#pragma version 6
intcblock 0 1 2 3 10000 604800
bytecblock 0x7332 0x7473 0x7331 0x617361 0x7072 0x707461 0x7065 0x6661 0x6261 0x7066 0x7063 0x6264 0x7076696e 0x74 0x7562 0x616661 0x707672 0x66 0x706863 0x7573 0x746277 0x707363 0x7076696c 0x7073 0x6376 0x736964 0x656674 0x7365747570 0x707763 0x70746c 0x766c6964 0x766964 0x76617361 0x6d62 0x7462 0x7662 0x44454641554c5441444452455353 0x6166 0x6262 0x76626964 0x7362 0x6c70 0x747262
txn ApplicationID
intc_0 // 0
==
bnz main_l105
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l104
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l103
txn OnCompletion
intc_1 // OptIn
==
bnz main_l102
txn OnCompletion
intc_2 // CloseOut
==
bnz main_l101
txna ApplicationArgs 0
pushbytes 0x7472616e73666572 // "transfer"
==
bnz main_l100
txna ApplicationArgs 0
pushbytes 0x627579 // "buy"
==
bnz main_l93
txna ApplicationArgs 0
pushbytes 0x73656c6c // "sell"
==
bnz main_l89
txna ApplicationArgs 0
pushbytes 0x6765745f6261636b696e67 // "get_backing"
==
bnz main_l88
txna ApplicationArgs 0
pushbytes 0x626f72726f77 // "borrow"
==
bnz main_l87
txna ApplicationArgs 0
pushbytes 0x7265706179 // "repay"
==
bnz main_l86
txna ApplicationArgs 0
pushbytes 0x636c61696d5f65787465726e616c // "claim_external"
==
bnz main_l85
txna ApplicationArgs 0
pushbytes 0x73657475705f6c6f636b // "setup_lock"
==
bnz main_l84
txna ApplicationArgs 0
pushbytes 0x6275795f70726573616c65 // "buy_presale"
==
bnz main_l83
txna ApplicationArgs 0
pushbytes 0x636c61696d5f70726573616c65 // "claim_presale"
==
bnz main_l72
txna ApplicationArgs 0
pushbytes 0x637265617465 // "create"
==
bnz main_l71
txna ApplicationArgs 0
bytec 27 // "setup"
==
bnz main_l53
txna ApplicationArgs 0
pushbytes 0x726573657475705f70726573616c65 // "resetup_presale"
==
bnz main_l29
txna ApplicationArgs 0
pushbytes 0x72656d6f76655f6d61785f627579 // "remove_max_buy"
==
bnz main_l28
txna ApplicationArgs 0
pushbytes 0x73657475705f7374616b696e67 // "setup_staking"
==
bnz main_l27
txna ApplicationArgs 0
pushbytes 0x73657475705f646973747269627574696f6e // "setup_distribution"
==
bnz main_l26
txna ApplicationArgs 0
pushbytes 0x6164645f6c6971 // "add_liq"
==
bnz main_l23
err
main_l23:
txn Sender
global CreatorAddress
==
assert
global GroupSize
intc_2 // 2
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Receiver
global CurrentApplicationAddress
==
assert
txna ApplicationArgs 1
btoi
bytec_0 // "s2"
app_global_get
mulw
intc 4 // 10000
uncover 2
dig 1
*
cover 2
mulw
cover 2
+
swap
txn GroupIndex
intc_1 // 1
-
gtxns Amount
bytec_2 // "s1"
app_global_get
mulw
divmodw
pop
pop
swap
!
assert
store 11
load 11
pushint 9800 // 9800
>=
load 11
pushint 10200 // 10200
<=
&&
bnz main_l25
intc_0 // 0
return
main_l25:
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 1
btoi
callsub sendTokens_5
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
txn GroupIndex
intc_1 // 1
-
gtxns Amount
+
app_global_put
bytec_2 // "s1"
bytec_2 // "s1"
app_global_get
txna ApplicationArgs 1
btoi
+
app_global_put
intc_1 // 1
return
main_l26:
txn Sender
global CreatorAddress
==
assert
global GroupSize
intc_3 // 3
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
pushint 6 // appl
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 0
bytec 27 // "setup"
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Sender
global CreatorAddress
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
callsub getappaddress_0
txna Accounts 1
==
assert
txn Sender
txna Accounts 1
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 1
btoi
callsub sendTokens_5
intc_1 // 1
return
main_l27:
txn Sender
global CreatorAddress
==
assert
global GroupSize
intc_3 // 3
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns Receiver
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
callsub getappaddress_0
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
pushint 6 // appl
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 0
bytec 27 // "setup"
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa Assets 1
bytec 32 // "vasa"
app_global_get
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa Applications 1
global CurrentApplicationID
==
assert
bytec 25 // "sid"
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
app_global_put
txn Sender
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
callsub getappaddress_0
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 1
btoi
callsub sendTokens_5
intc_1 // 1
return
main_l28:
global CreatorAddress
txn Sender
==
assert
bytec 33 // "mb"
pushint 10000000000000000 // 10000000000000000
app_global_put
intc_1 // 1
return
main_l29:
txn NumAppArgs
pushint 10 // 10
>=
bnz main_l39
global GroupSize
intc_1 // 1
>=
bytec 9 // "pf"
app_global_get
intc_0 // 0
==
&&
global LatestTimestamp
bytec 6 // "pe"
app_global_get
>
&&
bytec 4 // "pr"
app_global_get
bytec 21 // "psc"
app_global_get
<
&&
txn Sender
global CreatorAddress
==
&&
txna Assets 0
bytec_3 // "asa"
app_global_get
==
&&
txn NumAppArgs
pushint 4 // 4
==
&&
txna ApplicationArgs 1
btoi
bytec 6 // "pe"
app_global_get
pushint 600 // 600
+
>=
&&
txna Accounts 1
bytec 7 // "fa"
app_global_get
==
&&
bnz main_l32
intc_0 // 0
return
main_l32:
bytec 13 // "t"
txna ApplicationArgs 1
btoi
app_global_put
bytec 26 // "eft"
txna ApplicationArgs 1
btoi
txna ApplicationArgs 3
btoi
+
app_global_put
txna ApplicationArgs 2
btoi
bytec_1 // "ts"
app_global_get
<
assert
txn Fee
intc_2 // 2
global MinTxnFee
*
>=
assert
txna ApplicationArgs 2
btoi
bytec_2 // "s1"
app_global_get
bytec 5 // "pta"
app_global_get
+
>
bnz main_l38
txna ApplicationArgs 2
btoi
bytec_2 // "s1"
app_global_get
bytec 5 // "pta"
app_global_get
+
<
bnz main_l37
main_l34:
bytec_2 // "s1"
txna ApplicationArgs 2
btoi
app_global_put
bytec 5 // "pta"
intc_0 // 0
app_global_put
global GroupSize
intc_2 // 2
==
bnz main_l36
main_l35:
bytec 9 // "pf"
intc_1 // 1
app_global_put
bytec 16 // "pvr"
intc_0 // 0
app_global_put
bytec 22 // "pvil"
intc_0 // 0
app_global_put
bytec 12 // "pvin"
intc_0 // 0
app_global_put
intc_1 // 1
return
main_l36:
gtxn 0 TypeEnum
intc_1 // pay
==
assert
gtxn 0 Receiver
global CurrentApplicationAddress
==
assert
gtxn 0 Amount
bytec 17 // "f"
app_global_get
callsub calculateFraction_2
store 6
bytec 7 // "fa"
app_global_get
load 6
callsub sendAlgo_3
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
gtxn 0 Amount
+
load 6
-
app_global_put
b main_l35
main_l37:
global CurrentApplicationAddress
txn Sender
bytec_2 // "s1"
app_global_get
bytec 5 // "pta"
app_global_get
+
txna ApplicationArgs 2
btoi
-
callsub sendTokens_5
b main_l34
main_l38:
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 2
btoi
bytec_2 // "s1"
app_global_get
-
bytec 5 // "pta"
app_global_get
-
callsub sendTokens_5
b main_l34
main_l39:
global GroupSize
intc_1 // 1
>=
txna Assets 0
bytec_3 // "asa"
app_global_get
==
&&
txna Accounts 1
bytec 7 // "fa"
app_global_get
==
&&
bytec 9 // "pf"
app_global_get
intc_0 // 0
==
&&
global LatestTimestamp
bytec 6 // "pe"
app_global_get
>
&&
bytec 4 // "pr"
app_global_get
bytec 21 // "psc"
app_global_get
<
&&
txn Sender
global CreatorAddress
==
&&
txna ApplicationArgs 1
btoi
bytec 21 // "psc"
app_global_get
>=
&&
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
<=
&&
txna ApplicationArgs 2
btoi
bytec 18 // "phc"
app_global_get
<=
&&
txna ApplicationArgs 2
btoi
bytec 4 // "pr"
app_global_get
>=
&&
txna ApplicationArgs 3
btoi
global LatestTimestamp
>=
&&
txna ApplicationArgs 3
btoi
txna ApplicationArgs 4
btoi
<
&&
txna ApplicationArgs 4
btoi
txna ApplicationArgs 3
btoi
-
pushint 2419200 // 2419200
<=
&&
txna ApplicationArgs 5
btoi
bytec 28 // "pwc"
app_global_get
>=
&&
txna ApplicationArgs 6
btoi
bytec 29 // "ptl"
app_global_get
>=
&&
txna ApplicationArgs 6
btoi
intc 4 // 10000
<=
&&
txna ApplicationArgs 7
btoi
txna ApplicationArgs 4
btoi
>
&&
txna ApplicationArgs 7
btoi
txna ApplicationArgs 4
btoi
-
intc 5 // 604800
<=
&&
txna ApplicationArgs 8
btoi
bytec 5 // "pta"
app_global_get
>=
&&
txna ApplicationArgs 8
btoi
bytec_2 // "s1"
app_global_get
+
bytec_1 // "ts"
app_global_get
<=
&&
bnz main_l41
intc_0 // 0
return
main_l41:
bytec 23 // "ps"
txna ApplicationArgs 3
btoi
app_global_put
bytec 6 // "pe"
txna ApplicationArgs 4
btoi
app_global_put
bytec 18 // "phc"
txna ApplicationArgs 2
btoi
app_global_put
bytec 21 // "psc"
txna ApplicationArgs 1
btoi
app_global_put
bytec 28 // "pwc"
txna ApplicationArgs 5
btoi
app_global_put
bytec 29 // "ptl"
txna ApplicationArgs 6
btoi
app_global_put
bytec 13 // "t"
txna ApplicationArgs 7
btoi
app_global_put
bytec 26 // "eft"
txna ApplicationArgs 7
btoi
txna ApplicationArgs 9
btoi
+
app_global_put
bytec 9 // "pf"
intc_0 // 0
app_global_put
bytec 16 // "pvr"
app_global_get
intc_0 // 0
!=
bnz main_l52
main_l42:
txn NumAppArgs
pushint 13 // 13
==
bnz main_l51
main_l43:
global GroupSize
intc_2 // 2
==
bnz main_l50
main_l44:
txna ApplicationArgs 8
btoi
bytec 5 // "pta"
app_global_get
>
bnz main_l46
main_l45:
intc_1 // 1
return
main_l46:
global GroupSize
intc_2 // 2
==
bnz main_l49
txn Fee
intc_2 // 2
global MinTxnFee
*
>=
assert
main_l48:
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 8
btoi
bytec 5 // "pta"
app_global_get
-
callsub sendTokens_5
bytec 5 // "pta"
txna ApplicationArgs 8
btoi
app_global_put
b main_l45
main_l49:
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
b main_l48
main_l50:
txn Fee
intc_2 // 2
global MinTxnFee
*
>=
assert
gtxn 0 TypeEnum
intc_1 // pay
==
assert
gtxn 0 Receiver
global CurrentApplicationAddress
==
assert
gtxn 0 Amount
bytec 17 // "f"
app_global_get
callsub calculateFraction_2
store 6
bytec 7 // "fa"
app_global_get
load 6
callsub sendAlgo_3
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
gtxn 0 Amount
+
load 6
-
app_global_put
b main_l44
main_l51:
txna ApplicationArgs 10
btoi
txna ApplicationArgs 4
btoi
>=
assert
txna ApplicationArgs 12
btoi
intc_1 // 1
>=
assert
bytec 16 // "pvr"
txna ApplicationArgs 10
btoi
app_global_put
bytec 22 // "pvil"
txna ApplicationArgs 11
btoi
app_global_put
bytec 12 // "pvin"
txna ApplicationArgs 12
btoi
app_global_put
b main_l43
main_l52:
txn NumAppArgs
pushint 13 // 13
==
assert
b main_l42
main_l53:
txna Accounts 2
txna Assets 0
asset_holding_get AssetBalance
store 10
store 9
load 10
assert
global CreatorAddress
txn Sender
==
assert
global GroupSize
intc_3 // 3
>=
assert
txn NumAppArgs
pushint 4 // 4
>=
assert
txn GroupIndex
intc_1 // 1
-
gtxns Sender
txn Sender
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns Sender
txn Sender
==
assert
bytec_2 // "s1"
app_global_get
intc_0 // 0
==
assert
bytec_0 // "s2"
app_global_get
intc_0 // 0
==
assert
txna ApplicationArgs 1
btoi
bytec_1 // "ts"
app_global_get
<=
assert
txna ApplicationArgs 2
btoi
global LatestTimestamp
>
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txna Accounts 1
bytec 7 // "fa"
app_global_get
==
assert
txna Accounts 2
bytec 8 // "ba"
app_global_get
==
assert
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
intc_0 // 0
store 8
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Receiver
global CurrentApplicationAddress
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns TypeEnum
pushint 4 // axfer
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns Sender
txn GroupIndex
intc_2 // 2
-
gtxns AssetReceiver
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns AssetAmount
intc_0 // 0
==
assert
txn GroupIndex
intc_2 // 2
-
gtxns XferAsset
bytec_3 // "asa"
app_global_get
==
assert
bytec 26 // "eft"
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
+
app_global_put
bytec_2 // "s1"
txna ApplicationArgs 1
btoi
app_global_put
bytec 13 // "t"
txna ApplicationArgs 2
btoi
app_global_put
global GroupSize
pushint 5 // 5
==
bnz main_l65
main_l54:
load 8
intc_0 // 0
==
bnz main_l64
main_l55:
txn NumAppArgs
pushint 4 // 4
>
bnz main_l59
txna ApplicationArgs 1
btoi
bytec_1 // "ts"
app_global_get
<
bnz main_l58
main_l57:
intc_1 // 1
return
main_l58:
global CurrentApplicationAddress
txn Sender
bytec_1 // "ts"
app_global_get
txna ApplicationArgs 1
btoi
-
callsub sendTokens_5
b main_l57
main_l59:
txn NumAppArgs
pushint 8 // 8
>=
assert
txna ApplicationArgs 2
btoi
bytec 6 // "pe"
app_global_get
>
assert
txna ApplicationArgs 2
btoi
bytec 6 // "pe"
app_global_get
-
intc 5 // 604800
<=
assert
txna ApplicationArgs 5
btoi
txna ApplicationArgs 4
btoi
>=
assert
txna ApplicationArgs 7
btoi
intc 4 // 10000
<=
assert
txna ApplicationArgs 8
btoi
txna ApplicationArgs 1
btoi
+
bytec_1 // "ts"
app_global_get
<=
assert
bytec 21 // "psc"
txna ApplicationArgs 4
btoi
app_global_put
bytec 18 // "phc"
txna ApplicationArgs 5
btoi
app_global_put
bytec 28 // "pwc"
txna ApplicationArgs 6
btoi
app_global_put
bytec 29 // "ptl"
txna ApplicationArgs 7
btoi
app_global_put
bytec 4 // "pr"
intc_0 // 0
app_global_put
bytec 5 // "pta"
txna ApplicationArgs 8
btoi
app_global_put
txn NumAppArgs
pushint 12 // 12
==
bnz main_l63
bytec 16 // "pvr"
intc_0 // 0
app_global_put
bytec 22 // "pvil"
intc_0 // 0
app_global_put
bytec 12 // "pvin"
intc_0 // 0
app_global_put
main_l61:
bytec_1 // "ts"
app_global_get
bytec 5 // "pta"
app_global_get
-
bytec_2 // "s1"
app_global_get
-
intc_0 // 0
>
bz main_l57
global CurrentApplicationAddress
txn Sender
bytec_1 // "ts"
app_global_get
bytec 5 // "pta"
app_global_get
-
bytec_2 // "s1"
app_global_get
-
callsub sendTokens_5
b main_l57
main_l63:
txna ApplicationArgs 9
btoi
bytec 6 // "pe"
app_global_get
>=
assert
txna ApplicationArgs 11
btoi
intc_1 // 1
>=
assert
bytec 16 // "pvr"
txna ApplicationArgs 9
btoi
app_global_put
bytec 22 // "pvil"
txna ApplicationArgs 10
btoi
app_global_put
bytec 12 // "pvin"
txna ApplicationArgs 11
btoi
app_global_put
b main_l61
main_l64:
txn GroupIndex
intc_1 // 1
-
gtxns Amount
bytec 17 // "f"
app_global_get
callsub calculateFraction_2
store 6
bytec_0 // "s2"
txn GroupIndex
intc_1 // 1
-
gtxns Amount
load 6
-
app_global_put
bytec 7 // "fa"
app_global_get
load 6
callsub sendAlgo_3
b main_l55
main_l65:
txn GroupIndex
pushint 4 // 4
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
pushint 4 // 4
-
gtxns Receiver
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
callsub getappaddress_0
==
assert
txn GroupIndex
intc_3 // 3
-
gtxns TypeEnum
pushint 6 // appl
==
assert
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 0
bytec 27 // "setup"
==
assert
txna Accounts 3
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
callsub getappaddress_0
==
assert
bytec 25 // "sid"
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
app_global_put
txn NumAppArgs
pushint 4 // 4
>
bnz main_l70
txna ApplicationArgs 1
btoi
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 1
btoi
+
bytec_1 // "ts"
app_global_get
<=
assert
main_l67:
bytec_1 // "ts"
app_global_get
pushint 300 // 300
callsub calculateFraction_2
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 1
btoi
<=
bnz main_l69
main_l68:
global CurrentApplicationAddress
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
callsub getappaddress_0
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 1
btoi
callsub sendTokens_5
bytec 25 // "sid"
txn GroupIndex
intc_3 // 3
-
gtxns ApplicationID
app_global_put
b main_l54
main_l69:
intc_1 // 1
store 8
bytec_0 // "s2"
txn GroupIndex
intc_1 // 1
-
gtxns Amount
app_global_put
b main_l68
main_l70:
txna ApplicationArgs 10
btoi
txna ApplicationArgs 1
btoi
+
txn GroupIndex
intc_3 // 3
-
gtxnsa ApplicationArgs 1
btoi
+
bytec_1 // "ts"
app_global_get
<=
assert
b main_l67
main_l71:
global GroupSize
intc_2 // 2
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Sender
txn Sender
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Receiver
global CurrentApplicationAddress
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns Amount
pushint 201000 // 201000
>=
assert
bytec_3 // "asa"
app_global_get
intc_0 // 0
==
assert
txn Sender
global CreatorAddress
==
assert
itxn_begin
intc_3 // acfg
itxn_field TypeEnum
txna ApplicationArgs 2
itxn_field ConfigAssetUnitName
txna ApplicationArgs 1
itxn_field ConfigAssetName
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
bytec_1 // "ts"
app_global_get
itxn_field ConfigAssetTotal
txna ApplicationArgs 3
btoi
itxn_field ConfigAssetDecimals
txna ApplicationArgs 4
itxn_field ConfigAssetURL
intc_1 // 1
itxn_field ConfigAssetDefaultFrozen
itxn_submit
bytec_3 // "asa"
itxn CreatedAssetID
app_global_put
intc_1 // 1
return
main_l72:
global GroupSize
intc_1 // 1
==
assert
intc_0 // 0
global CurrentApplicationID
app_opted_in
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn Fee
pushint 4 // 4
global MinTxnFee
*
>=
assert
bytec 6 // "pe"
app_global_get
global LatestTimestamp
<
assert
bytec 4 // "pr"
app_global_get
bytec 21 // "psc"
app_global_get
>=
bnz main_l75
txn Sender
intc_0 // 0
bytec 10 // "pc"
app_local_get
callsub sendAlgo_3
bytec 4 // "pr"
bytec 4 // "pr"
app_global_get
intc_0 // 0
bytec 10 // "pc"
app_local_get
-
app_global_put
intc_0 // 0
bytec 10 // "pc"
intc_0 // 0
app_local_put
main_l74:
intc_1 // 1
return
main_l75:
bytec 9 // "pf"
app_global_get
intc_1 // 1
!=
bnz main_l80
main_l76:
intc_0 // 0
bytec 10 // "pc"
app_local_get
bytec 5 // "pta"
app_global_get
mulw
intc_0 // 0
bytec 18 // "phc"
app_global_get
divmodw
pop
pop
swap
!
assert
store 2
bytec 12 // "pvin"
app_global_get
intc_0 // 0
==
bnz main_l79
intc_0 // 0
bytec 24 // "cv"
app_local_get
bytec 12 // "pvin"
app_global_get
<
assert
bytec 16 // "pvr"
app_global_get
intc_0 // 0
bytec 24 // "cv"
app_local_get
bytec 22 // "pvil"
app_global_get
*
+
store 11
load 11
global LatestTimestamp
<=
assert
intc_0 // 0
bytec 24 // "cv"
intc_0 // 0
bytec 24 // "cv"
app_local_get
intc_1 // 1
+
app_local_put
global CurrentApplicationAddress
txn Sender
load 2
bytec 12 // "pvin"
app_global_get
/
callsub sendTokens_5
intc_0 // 0
bytec 24 // "cv"
app_local_get
bytec 12 // "pvin"
app_global_get
==
bz main_l74
intc_0 // 0
bytec 10 // "pc"
intc_0 // 0
app_local_put
b main_l74
main_l79:
global CurrentApplicationAddress
txn Sender
load 2
callsub sendTokens_5
intc_0 // 0
bytec 10 // "pc"
intc_0 // 0
app_local_put
b main_l74
main_l80:
bytec 4 // "pr"
app_global_get
bytec 17 // "f"
app_global_get
callsub calculateFraction_2
store 6
bytec 4 // "pr"
app_global_get
bytec 29 // "ptl"
app_global_get
callsub calculateFraction_2
store 2
bytec 4 // "pr"
app_global_get
load 2
-
load 6
-
store 3
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
load 2
+
app_global_put
global CreatorAddress
load 3
callsub sendAlgo_3
bytec 7 // "fa"
app_global_get
load 6
callsub sendAlgo_3
bytec 18 // "phc"
app_global_get
bytec 4 // "pr"
app_global_get
>
bnz main_l82
main_l81:
bytec 9 // "pf"
intc_1 // 1
app_global_put
b main_l76
main_l82:
bytec 5 // "pta"
app_global_get
bytec 5 // "pta"
app_global_get
bytec 4 // "pr"
app_global_get
mulw
intc_0 // 0
bytec 18 // "phc"
app_global_get
divmodw
pop
pop
swap
!
assert
-
store 0
global CurrentApplicationAddress
bytec 8 // "ba"
app_global_get
load 0
callsub sendTokens_5
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
load 0
-
app_global_put
bytec 11 // "bd"
bytec 11 // "bd"
app_global_get
load 0
+
app_global_put
b main_l81
main_l83:
global GroupSize
intc_2 // 2
==
assert
intc_0 // 0
global CurrentApplicationID
app_opted_in
assert
bytec 23 // "ps"
app_global_get
global LatestTimestamp
<=
assert
bytec 6 // "pe"
app_global_get
global LatestTimestamp
>=
assert
gtxn 1 TypeEnum
intc_1 // pay
==
assert
gtxn 1 Receiver
global CurrentApplicationAddress
==
assert
gtxn 1 Amount
intc_0 // 0
bytec 10 // "pc"
app_local_get
+
bytec 28 // "pwc"
app_global_get
<=
assert
gtxn 1 Amount
bytec 4 // "pr"
app_global_get
+
bytec 18 // "phc"
app_global_get
<=
assert
intc_0 // 0
bytec 10 // "pc"
gtxn 1 Amount
intc_0 // 0
bytec 10 // "pc"
app_local_get
+
app_local_put
bytec 4 // "pr"
bytec 4 // "pr"
app_global_get
gtxn 1 Amount
+
app_global_put
intc_1 // 1
return
main_l84:
txn GroupIndex
intc_1 // 1
-
gtxns TypeEnum
pushint 6 // appl
==
assert
txn GroupIndex
intc_1 // 1
-
gtxns ApplicationID
bytec 30 // "vlid"
app_global_get
==
assert
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 0
pushbytes 0x736d6172745f7365747570 // "smart_setup"
==
assert
txn Sender
bytec 30 // "vlid"
app_global_get
callsub getappaddress_0
txn GroupIndex
intc_1 // 1
-
gtxnsa ApplicationArgs 1
btoi
callsub sendTokens_5
intc_1 // 1
return
main_l85:
txn Sender
bytec 25 // "sid"
app_global_get
callsub getappaddress_0
==
txn Sender
bytec 30 // "vlid"
app_global_get
callsub getappaddress_0
==
||
assert
txn Sender
txna Accounts 1
txna ApplicationArgs 1
btoi
callsub sendTokens_5
intc_1 // 1
return
main_l86:
txn Sender
global CurrentApplicationID
app_opted_in
assert
global GroupSize
intc_2 // 2
==
assert
gtxn 1 TypeEnum
intc_1 // pay
==
assert
gtxn 1 Sender
txn Sender
==
assert
gtxn 1 Amount
intc_0 // 0
bytec 14 // "ub"
app_local_get
<=
assert
gtxn 1 Receiver
global CurrentApplicationAddress
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn Fee
intc_2 // 2
global MinTxnFee
*
>=
assert
gtxn 1 Amount
intc_0 // 0
bytec 19 // "us"
app_local_get
mulw
intc_0 // 0
intc_0 // 0
bytec 14 // "ub"
app_local_get
divmodw
pop
pop
swap
!
assert
store 2
global CurrentApplicationAddress
txn Sender
load 2
callsub sendTokens_5
intc_0 // 0
bytec 19 // "us"
intc_0 // 0
bytec 19 // "us"
app_local_get
load 2
-
app_local_put
intc_0 // 0
bytec 14 // "ub"
intc_0 // 0
bytec 14 // "ub"
app_local_get
gtxn 1 Amount
-
app_local_put
bytec 20 // "tbw"
bytec 20 // "tbw"
app_global_get
gtxn 1 Amount
-
app_global_put
intc_1 // 1
return
main_l87:
txn Sender
global CurrentApplicationID
app_opted_in
assert
global GroupSize
intc_1 // 1
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
txn NumAppArgs
intc_2 // 2
==
assert
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 1
btoi
callsub sendTokens_5
txna ApplicationArgs 1
btoi
global CurrentApplicationAddress
balance
global CurrentApplicationAddress
min_balance
-
bytec_0 // "s2"
app_global_get
-
bytec 20 // "tbw"
app_global_get
+
mulw
intc_0 // 0
bytec_1 // "ts"
app_global_get
divmodw
pop
pop
swap
!
assert
store 2
txn Sender
load 2
callsub sendAlgo_3
intc_0 // 0
bytec 19 // "us"
intc_0 // 0
bytec 19 // "us"
app_local_get
txna ApplicationArgs 1
btoi
+
app_local_put
intc_0 // 0
bytec 14 // "ub"
intc_0 // 0
bytec 14 // "ub"
app_local_get
load 2
+
app_local_put
bytec 20 // "tbw"
bytec 20 // "tbw"
app_global_get
load 2
+
app_global_put
intc_1 // 1
return
main_l88:
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
txna Accounts 1
bytec 8 // "ba"
app_global_get
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txna ApplicationArgs 1
btoi
global CurrentApplicationAddress
balance
global CurrentApplicationAddress
min_balance
-
bytec_0 // "s2"
app_global_get
-
bytec 20 // "tbw"
app_global_get
+
mulw
intc_0 // 0
bytec_1 // "ts"
app_global_get
divmodw
pop
pop
swap
!
assert
store 2
load 2
intc_0 // 0
>
assert
txn Sender
load 2
callsub sendAlgo_3
txn Sender
bytec 8 // "ba"
app_global_get
txna ApplicationArgs 1
btoi
callsub sendTokens_5
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
txna ApplicationArgs 1
btoi
-
app_global_put
bytec 11 // "bd"
bytec 11 // "bd"
app_global_get
txna ApplicationArgs 1
btoi
+
app_global_put
intc_1 // 1
return
main_l89:
bytec 13 // "t"
app_global_get
global LatestTimestamp
<=
assert
global GroupSize
intc_1 // 1
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txna Accounts 1
bytec 8 // "ba"
app_global_get
==
assert
txna Accounts 2
bytec 7 // "fa"
app_global_get
==
assert
txna Accounts 3
bytec 39 // "vbid"
app_global_get
callsub getappaddress_0
==
assert
txn Fee
pushint 6 // 6
global MinTxnFee
*
>=
assert
txn NumAppArgs
pushint 4 // 4
==
assert
bytec 13 // "t"
app_global_get
global LatestTimestamp
<=
bytec 9 // "pf"
app_global_get
&&
assert
txna ApplicationArgs 1
btoi
bytec 40 // "sb"
app_global_get
callsub calculateFraction_2
store 0
txna ApplicationArgs 1
btoi
load 0
-
bytec_0 // "s2"
app_global_get
mulw
intc_0 // 0
bytec_2 // "s1"
app_global_get
divmodw
pop
pop
swap
!
assert
store 2
txna ApplicationArgs 1
btoi
bytec_0 // "s2"
app_global_get
mulw
intc_0 // 0
bytec_2 // "s1"
app_global_get
divmodw
pop
pop
swap
!
assert
store 11
load 11
bytec 41 // "lp"
app_global_get
callsub calculateFraction_2
store 1
load 11
bytec 34 // "tb"
app_global_get
callsub calculateFraction_2
store 4
load 11
bytec 17 // "f"
app_global_get
callsub calculateFraction_2
store 6
load 11
bytec 35 // "vb"
app_global_get
callsub calculateFraction_2
store 5
bytec 15 // "afa"
app_global_get
bytec 36 // "DEFAULTADDRESS"
!=
bnz main_l92
intc_0 // 0
store 7
main_l91:
load 2
load 4
-
load 1
-
load 6
-
load 5
-
load 7
-
store 3
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
load 3
callsub isValidSlippage_1
assert
txn Sender
load 3
callsub sendAlgo_3
txna Accounts 3
load 5
callsub sendAlgo_3
bytec 7 // "fa"
app_global_get
load 6
callsub sendAlgo_3
txn Sender
global CurrentApplicationAddress
txna ApplicationArgs 1
btoi
callsub sendTokens_5
global CurrentApplicationAddress
bytec 8 // "ba"
app_global_get
load 0
callsub sendTokens_5
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
load 0
-
app_global_put
bytec 11 // "bd"
bytec 11 // "bd"
app_global_get
load 0
+
app_global_put
bytec_2 // "s1"
bytec_2 // "s1"
app_global_get
txna ApplicationArgs 1
btoi
load 0
-
+
app_global_put
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
load 2
-
load 1
+
app_global_put
intc_1 // 1
return
main_l92:
txna Accounts 4
bytec 15 // "afa"
app_global_get
==
assert
load 11
bytec 37 // "af"
app_global_get
callsub calculateFraction_2
store 7
bytec 15 // "afa"
app_global_get
load 7
callsub sendAlgo_3
b main_l91
main_l93:
bytec 13 // "t"
app_global_get
global LatestTimestamp
<=
bytec 9 // "pf"
app_global_get
&&
assert
global GroupSize
intc_2 // 2
==
assert
txna Accounts 1
bytec 8 // "ba"
app_global_get
==
assert
txna Accounts 2
bytec 7 // "fa"
app_global_get
==
assert
txna Accounts 3
bytec 31 // "vid"
app_global_get
callsub getappaddress_0
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txna Applications 1
bytec 31 // "vid"
app_global_get
==
assert
gtxn 0 TypeEnum
intc_1 // pay
==
assert
gtxn 0 Receiver
global CurrentApplicationAddress
==
assert
gtxn 0 Sender
txn Sender
==
assert
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
>
assert
txn NumAppArgs
intc_3 // 3
==
assert
txn Fee
pushint 5 // 5
global MinTxnFee
*
>=
assert
gtxn 0 Amount
bytec 33 // "mb"
app_global_get
<=
assert
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec 17 // "f"
app_global_get
callsub calculateFraction_2
store 6
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec 35 // "vb"
app_global_get
callsub calculateFraction_2
store 5
load 5
bytec 31 // "vid"
app_global_get
callsub burnVerse_4
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec 34 // "tb"
app_global_get
callsub calculateFraction_2
store 4
bytec 15 // "afa"
app_global_get
bytec 36 // "DEFAULTADDRESS"
!=
bnz main_l99
intc_0 // 0
store 7
main_l95:
global LatestTimestamp
bytec 26 // "eft"
app_global_get
>=
bnz main_l98
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 4
-
load 5
-
load 6
-
load 7
-
global LatestTimestamp
bytec 13 // "t"
app_global_get
-
mulw
intc_0 // 0
bytec 26 // "eft"
app_global_get
bytec 13 // "t"
app_global_get
-
divmodw
pop
pop
swap
!
assert
store 11
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 11
-
load 6
-
load 5
-
store 4
load 11
bytec_2 // "s1"
app_global_get
mulw
intc_0 // 0
bytec_0 // "s2"
app_global_get
divmodw
pop
pop
swap
!
assert
store 2
load 11
bytec_2 // "s1"
app_global_get
mulw
intc_0 // 0
bytec_0 // "s2"
app_global_get
divmodw
pop
pop
swap
!
assert
bytec 38 // "bb"
app_global_get
callsub calculateFraction_2
store 0
main_l97:
load 2
intc_0 // 0
>
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
load 2
load 0
-
callsub isValidSlippage_1
assert
global CurrentApplicationAddress
txn Sender
load 2
load 0
-
callsub sendTokens_5
global CurrentApplicationAddress
bytec 8 // "ba"
app_global_get
load 0
callsub sendTokens_5
bytec 7 // "fa"
app_global_get
load 6
callsub sendAlgo_3
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
load 0
-
app_global_put
bytec 11 // "bd"
bytec 11 // "bd"
app_global_get
load 0
+
app_global_put
bytec_2 // "s1"
bytec_2 // "s1"
app_global_get
load 2
-
app_global_put
bytec_0 // "s2"
bytec_0 // "s2"
app_global_get
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 4
-
load 5
-
load 6
-
load 7
-
+
app_global_put
intc_1 // 1
return
main_l98:
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
load 4
-
load 5
-
load 6
-
load 7
-
bytec_2 // "s1"
app_global_get
mulw
intc_0 // 0
bytec_0 // "s2"
app_global_get
divmodw
pop
pop
swap
!
assert
store 2
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec_2 // "s1"
app_global_get
mulw
intc_0 // 0
bytec_0 // "s2"
app_global_get
divmodw
pop
pop
swap
!
assert
bytec 38 // "bb"
app_global_get
callsub calculateFraction_2
store 0
b main_l97
main_l99:
txna Accounts 4
bytec 15 // "afa"
app_global_get
==
assert
gtxn 0 Amount
intc_2 // 2
global MinTxnFee
*
-
bytec 37 // "af"
app_global_get
callsub calculateFraction_2
store 7
bytec 15 // "afa"
app_global_get
load 7
callsub sendAlgo_3
b main_l95
main_l100:
txn NumAppArgs
intc_2 // 2
==
assert
txna Accounts 1
bytec 8 // "ba"
app_global_get
==
assert
txna Assets 0
bytec_3 // "asa"
app_global_get
==
assert
txn Fee
intc_3 // 3
global MinTxnFee
*
>=
assert
txna ApplicationArgs 1
btoi
bytec 42 // "trb"
app_global_get
callsub calculateFraction_2
store 0
txn Sender
bytec 8 // "ba"
app_global_get
load 0
callsub sendTokens_5
txn Sender
txna Accounts 2
txna ApplicationArgs 1
btoi
load 0
-
callsub sendTokens_5
bytec_1 // "ts"
bytec_1 // "ts"
app_global_get
load 0
-
app_global_put
bytec 11 // "bd"
bytec 11 // "bd"
app_global_get
load 0
+
app_global_put
intc_1 // 1
return
main_l101:
global GroupSize
intc_1 // 1
==
assert
intc_0 // 0
bytec 10 // "pc"
app_local_get
intc_0 // 0
==
assert
intc_0 // 0
bytec 14 // "ub"
app_local_get
intc_0 // 0
==
assert
intc_0 // 0
bytec 19 // "us"
app_local_get
intc_0 // 0
==
assert
intc_1 // 1
return
main_l102:
bytec 23 // "ps"
app_global_get
global LatestTimestamp
<=
assert
intc_0 // 0
bytec 10 // "pc"
intc_0 // 0
app_local_put
intc_0 // 0
bytec 14 // "ub"
intc_0 // 0
app_local_put
intc_0 // 0
bytec 19 // "us"
intc_0 // 0
app_local_put
intc_0 // 0
bytec 24 // "cv"
intc_0 // 0
app_local_put
intc_1 // 1
return
main_l103:
intc_0 // 0
return
main_l104:
intc_0 // 0
return
main_l105:
txn NumAppArgs
pushint 7 // 7
==
txn NumAppArgs
pushint 8 // 8
==
||
txn NumAppArgs
pushint 9 // 9
==
||
txn NumAppArgs
pushint 10 // 10
==
||
assert
bytec_1 // "ts"
txna ApplicationArgs 0
btoi
app_global_put
bytec 38 // "bb"
txna ApplicationArgs 1
btoi
app_global_put
bytec 40 // "sb"
txna ApplicationArgs 2
btoi
app_global_put
bytec 42 // "trb"
txna ApplicationArgs 3
btoi
app_global_put
bytec 41 // "lp"
txna ApplicationArgs 4
btoi
app_global_put
bytec 34 // "tb"
txna ApplicationArgs 5
btoi
app_global_put
bytec 33 // "mb"
txna ApplicationArgs 6
btoi
app_global_put
bytec 35 // "vb"
pushint 200 // 200
app_global_put
bytec 17 // "f"
pushint 100 // 100
app_global_put
bytec 31 // "vid"
txna Applications 1
app_global_put
bytec 39 // "vbid"
txna Applications 2
app_global_put
bytec 30 // "vlid"
txna Applications 3
app_global_put
bytec 32 // "vasa"
txna Assets 0
app_global_put
bytec 8 // "ba"
txna Accounts 1
app_global_put
bytec 7 // "fa"
txna Accounts 2
app_global_put
bytec_3 // "asa"
intc_0 // 0
app_global_put
bytec 25 // "sid"
intc_0 // 0
app_global_put
bytec 12 // "pvin"
intc_0 // 0
app_global_put
bytec 16 // "pvr"
intc_0 // 0
app_global_put
bytec 22 // "pvil"
intc_0 // 0
app_global_put
bytec 23 // "ps"
intc_0 // 0
app_global_put
bytec 6 // "pe"
intc_0 // 0
app_global_put
bytec 9 // "pf"
intc_1 // 1
app_global_put
txn NumAccounts
intc_3 // 3
==
bnz main_l109
bytec 15 // "afa"
bytec 36 // "DEFAULTADDRESS"
app_global_put
txn NumAppArgs
pushint 7 // 7
>
bnz main_l108
main_l107:
bytec_0 // "s2"
intc_0 // 0
app_global_put
bytec_2 // "s1"
intc_0 // 0
app_global_put
bytec 11 // "bd"
intc_0 // 0
app_global_put
bytec 20 // "tbw"
intc_0 // 0
app_global_put
intc_1 // 1
return
main_l108:
txna ApplicationArgs 8
btoi
txna ApplicationArgs 7
btoi
>
assert
txna ApplicationArgs 7
btoi
global LatestTimestamp
>
assert
bytec 23 // "ps"
txna ApplicationArgs 7
btoi
app_global_put
bytec 6 // "pe"
txna ApplicationArgs 8
btoi
app_global_put
bytec 9 // "pf"
intc_0 // 0
app_global_put
b main_l107
main_l109:
bytec 15 // "afa"
txna Accounts 3
app_global_put
bytec 37 // "af"
txna ApplicationArgs 7
btoi
app_global_put
txn NumAppArgs
pushint 8 // 8
>
bz main_l107
txna ApplicationArgs 9
btoi
txna ApplicationArgs 8
btoi
>
assert
txna ApplicationArgs 8
btoi
global LatestTimestamp
>
assert
bytec 23 // "ps"
txna ApplicationArgs 8
btoi
app_global_put
bytec 6 // "pe"
txna ApplicationArgs 9
btoi
app_global_put
bytec 9 // "pf"
intc_0 // 0
app_global_put
b main_l107

// get_app_address
getappaddress_0:
store 12
pushbytes 0x6170704944 // "appID"
load 12
itob
concat
sha512_256
retsub

// isValidSlippage
isValidSlippage_1:
store 15
store 14
store 13
load 13
load 14
load 15
>
bnz isValidSlippage_1_l2
intc_0 // 0
b isValidSlippage_1_l3
isValidSlippage_1_l2:
load 14
load 15
-
isValidSlippage_1_l3:
intc 4 // 10000
mulw
intc_0 // 0
load 14
divmodw
pop
pop
swap
!
assert
>
retsub

// calculateFraction
calculateFraction_2:
store 17
store 16
load 16
load 17
mulw
intc_0 // 0
intc 4 // 10000
divmodw
pop
pop
swap
!
assert
retsub

// sendAlgo
sendAlgo_3:
store 19
store 18
itxn_begin
intc_1 // pay
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field Sender
load 18
itxn_field Receiver
load 19
itxn_field Amount
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// burnVerse
burnVerse_4:
store 21
store 20
itxn_begin
intc_1 // pay
itxn_field TypeEnum
load 21
callsub getappaddress_0
itxn_field Receiver
load 20
itxn_field Amount
intc_0 // 0
itxn_field Fee
itxn_next
pushint 6 // appl
itxn_field TypeEnum
load 21
itxn_field ApplicationID
pushbytes 0x6275726e // "burn"
itxn_field ApplicationArgs
bytec 32 // "vasa"
app_global_get
itxn_field Assets
bytec 8 // "ba"
app_global_get
itxn_field Accounts
intc_2 // 2
global MinTxnFee
*
itxn_field Fee
itxn_submit
retsub

// sendTokens
sendTokens_5:
store 24
store 23
store 22
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field Sender
bytec_3 // "asa"
app_global_get
itxn_field XferAsset
load 24
itxn_field AssetAmount
load 22
itxn_field AssetSender
load 23
itxn_field AssetReceiver
intc_0 // 0
itxn_field Fee
itxn_submit
retsub